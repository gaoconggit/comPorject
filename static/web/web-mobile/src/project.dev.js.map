{"version":3,"sources":["assets/Script/CatchItem.ts","assets/Script/Doll.ts","assets/Script/Helloworld.ts","assets/Script/MProgressBar.ts"],"names":["_a","cc","_decorator","ccclass","property","RankItem","_super","__extends","_this","apply","this","arguments","spritePhoto","spriteDoll","labelTime","labelDesc","_urlPhoto","_urlDoll","Object","defineProperty","prototype","get","set","value","log","loader","load","url","type","err","texture","frame","SpriteFrame","spriteFrame","_desc","string","_time","createImage","sprite","image","Image","onload","Texture2D","initWithElement","handleLoadedTexture","src","__decorate","Sprite","Label","Component","exports","default","NewClass","init","id","MProgressBar_1","require","Helloworld","giftList","dolls","dolls2","curDoll","lastDollNode","lastDollNode2","scrollSpeed","prefabDoll","nodePaw","dollContainer1","dollContainer2","framePaw1","framePaw2","framePaw3","nodeIntroduce","labelCoin","pbLucky","pbBox","labelBoxPercent","nodeBoxOpen","nodeBoxClose","scvBoxHistory","scvCatchHistory","prefabCatchItem","toast","labelPrice","nodeSuccess","spCatchDoll","nodeDetail","spDetail","labelDetail","_coin","v","toString","_progress","nodeTo","_boxProgress","flag1","flag2","progress","active","updateDolls","_isNewbee","comp","attrName","toV","time","offset","per","_loop_1","i","this_1","asyncAction","node","callFunc","sent","fetch","Promise","resolve","reject","xhr","XMLHttpRequest","onreadystatechange","readyState","status","response","JSON","parse","responseText","onerror","showToast","scheduleOnce","ontimeout","open","send","pName","dollName","instantiate","getChildByName","getComponent","parent","runAction","sequence","fadeIn","fadeOut","destroy","onCloseSuccess","onLoad","enabled","onMsgCall","textValue","__awaiter","data","res","baseUrl","uid","token","coin","parseInt","price","lucky_value","boxProgress","box_progress","gift_list","isNewbee","is_newbee","upCatchHistory","upBoxHistory","showBoxHistory","d","success","desc","nickname","goods_name","director","loadScene","window","document","addEventListener","addEventListenerXzww","postMessage","postMessageXzww","content","removeAllChildren","length","info","item","urlPhoto","avatar_thumb","urlDoll","img","user_nicename","ret_name","passtime","scrollToTop","showCatchHistory","forEach","_loop_2","dollInfo","this_2","is_box","doll","icon","x","width","push","on","onDetail","color","update","action","onIntroduce","onCloseIntroduce","onRecharge","onCloseDetail","description","onCatch","e","nodeTarget","target","btn","Button","interactable","offsetY","y","moveBy","p","dollClone_1","code","delayTime","error","msg","Prefab","Node","ProgressBar","ScrollView","mask","label","height","n","Math","floor","Float"],"mappings":"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","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class RankItem extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    private spritePhoto: cc.Sprite = null\r\n\r\n    @property(cc.Sprite)\r\n    private spriteDoll: cc.Sprite = null\r\n\r\n    @property(cc.Label)\r\n    private labelTime: cc.Label = null\r\n\r\n    @property(cc.Label)\r\n    private labelDesc: cc.Label = null\r\n\r\n    private _urlPhoto = '';\r\n    get urlPhoto() {\r\n        return this._urlPhoto;\r\n    }\r\n    set urlPhoto(value) {\r\n        cc.log(value)\r\n        this._urlPhoto = value;\r\n\r\n        cc.loader.load({ url: this._urlPhoto, type: 'png' }, (err, texture) => {\r\n            var frame = new cc.SpriteFrame(texture);\r\n            this.spritePhoto.spriteFrame = frame;\r\n        });\r\n        // this.createImage(this.spritePhoto, value)\r\n    }\r\n\r\n    private _urlDoll = '';\r\n    get urlDoll() {\r\n        return this._urlDoll;\r\n    }\r\n    set urlDoll(value) {\r\n        this._urlDoll = value;\r\n\r\n        cc.loader.load(this._urlDoll, (err, texture) => {\r\n            var frame = new cc.SpriteFrame(texture);\r\n            this.spriteDoll.spriteFrame = frame;\r\n        });\r\n    }\r\n\r\n    private _desc: string\r\n    get desc() {\r\n        return this._desc;\r\n    }\r\n    set desc(value) {\r\n        this._desc = value;\r\n        this.labelDesc.string = value\r\n    }\r\n\r\n    private _time: string\r\n    get time() {\r\n        return this._time;\r\n    }\r\n    set time(value) {\r\n        this._time = value;\r\n        this.labelTime.string = value\r\n    }\r\n\r\n    createImage(sprite, url) {\r\n        let image = new Image();\r\n        image.onload = function () {\r\n            let texture = new cc.Texture2D();\r\n            texture.initWithElement(image);\r\n            texture.handleLoadedTexture();\r\n            sprite.spriteFrame = new cc.SpriteFrame(texture);\r\n        };\r\n        image.src = url;\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n    id: string\r\n\r\n    @property(cc.Sprite)\r\n    sprite: cc.Sprite = null\r\n\r\n    init(id: string, url: string) {\r\n        this.id = id\r\n        cc.loader.load(url, (err, texture) => {\r\n            var frame = new cc.SpriteFrame(texture);\r\n            this.sprite.spriteFrame = frame;\r\n        });\r\n    }\r\n}\r\n","import Doll from \"./Doll\";\r\nimport MProgressBar from \"./MProgressBar\";\r\nimport CatchItem from \"./CatchItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Helloworld extends cc.Component {\r\n    price: any;\r\n    baseUrl: any;\r\n    uid: any;\r\n    token: any;\r\n    giftList: any[] = []\r\n    dolls: Doll[] = []\r\n    dolls2: Doll[] = []\r\n    curDoll: Doll = null\r\n    lastDollNode: cc.Node = null\r\n    lastDollNode2: cc.Node = null\r\n    scrollSpeed = 3\r\n\r\n    @property(cc.Prefab)\r\n    prefabDoll: cc.Prefab = null\r\n\r\n    @property(cc.Node)\r\n    nodePaw: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    dollContainer1: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    dollContainer2: cc.Node = null\r\n\r\n    @property(cc.SpriteFrame)\r\n    framePaw1: cc.SpriteFrame = null\r\n\r\n    @property(cc.SpriteFrame)\r\n    framePaw2: cc.SpriteFrame = null\r\n\r\n    @property(cc.SpriteFrame)\r\n    framePaw3: cc.SpriteFrame = null\r\n\r\n    @property(cc.Node)\r\n    nodeIntroduce: cc.Node = null\r\n\r\n    @property(cc.Label)\r\n    labelCoin: cc.Label = null\r\n\r\n    @property(MProgressBar)\r\n    pbLucky: MProgressBar = null\r\n\r\n    @property(cc.ProgressBar)\r\n    pbBox: cc.ProgressBar = null\r\n\r\n    @property(cc.Label)\r\n    labelBoxPercent: cc.Label = null\r\n\r\n    @property(cc.Node)\r\n    nodeBoxOpen: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    nodeBoxClose: cc.Node = null\r\n\r\n    @property(cc.ScrollView)\r\n    scvBoxHistory: cc.ScrollView = null\r\n\r\n    @property(cc.ScrollView)\r\n    scvCatchHistory: cc.ScrollView = null\r\n\r\n    @property(cc.Prefab)\r\n    prefabCatchItem: cc.Prefab = null\r\n\r\n    @property(cc.Node)\r\n    toast: cc.Node = null\r\n\r\n    @property(cc.Label)\r\n    labelPrice: cc.Label = null\r\n\r\n    @property(cc.Node)\r\n    nodeSuccess: cc.Node = null\r\n\r\n    @property(cc.Sprite)\r\n    spCatchDoll: cc.Sprite = null\r\n\r\n    @property(cc.Node)\r\n    nodeDetail: cc.Node = null\r\n\r\n    @property(cc.Sprite)\r\n    spDetail: cc.Sprite = null\r\n\r\n    @property(cc.Label)\r\n    labelDetail: cc.Label = null\r\n\r\n    _coin: number\r\n    get coin() {\r\n        return this._coin\r\n    }\r\n    set coin(v) {\r\n        this._coin = v\r\n        this.labelCoin.string = v.toString()\r\n    }\r\n\r\n    _progress: number\r\n    get progress() {\r\n        return this._progress\r\n    }\r\n    set progress(v) {\r\n        cc.log(v)\r\n        this._progress = v\r\n        // this.pbLucky.progress = v / 100\r\n        this.nodeTo(this.pbLucky, 'progress', v / 100, 2)\r\n    }\r\n\r\n    _boxProgress: number\r\n    get boxProgress() {\r\n        return this._boxProgress\r\n    }\r\n    set boxProgress(v) {\r\n        const flag1 = this._boxProgress == 100 && v == 100\r\n        const flag2 = this._boxProgress != 100 && v != 100\r\n\r\n        cc.log(v)\r\n        this._boxProgress = v\r\n        this.pbBox.progress = v / 100\r\n        this.labelBoxPercent.string = `${v}%`\r\n        if (v == 100) {\r\n            this.nodeBoxOpen.active = true\r\n            this.nodeBoxClose.active = false\r\n        }\r\n        else {\r\n            this.nodeBoxOpen.active = false\r\n            this.nodeBoxClose.active = true\r\n        }\r\n\r\n        if (flag1 || flag2) {\r\n\r\n        }\r\n        else {\r\n            this.updateDolls()\r\n        }\r\n    }\r\n\r\n    _isNewbee: boolean\r\n    get isNewbee() {\r\n        return this._isNewbee\r\n    }\r\n    set isNewbee(v) {\r\n        if (v === this._isNewbee) {\r\n            return\r\n        }\r\n        this._isNewbee = v\r\n        this.updateDolls()\r\n    }\r\n\r\n    async nodeTo(comp, attrName, toV, time) {\r\n        const offset = toV - comp[attrName]\r\n        const per = offset / time / 10\r\n        for (let i = 0; i < time * 10; i++) {\r\n            await this.asyncAction(comp.node, cc.callFunc(() => {\r\n                if (i === time * 10 - 1) {\r\n                    comp[attrName] = toV\r\n                } else {\r\n                    comp[attrName] += per\r\n                }\r\n            }))\r\n        }\r\n    }\r\n\r\n    fetch(url) {\r\n        return new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = () => {\r\n                if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) {\r\n                    const response = JSON.parse(xhr.responseText);\r\n                    resolve(response)\r\n                }\r\n                else {\r\n                }\r\n            };\r\n            xhr.onerror = () => {\r\n                this.showToast('出现错误,2秒后自动重试')\r\n                this.scheduleOnce(() => this.fetch(url), 2)\r\n            }\r\n            xhr.ontimeout = () => {\r\n                this.showToast('出现错误,2秒后自动重试')\r\n                this.scheduleOnce(() => this.fetch(url), 2)\r\n            }\r\n            xhr.open(\"POST\", url, true);\r\n            xhr.send();\r\n        })\r\n    }\r\n\r\n    showToast(pName, dollName?: string) {\r\n        let node = cc.instantiate(this.toast)\r\n\r\n        if (dollName) {\r\n            node.getChildByName('Layout').getChildByName('playerName').getComponent(cc.Label).string = pName\r\n            node.getChildByName('Layout').getChildByName('dollName').getComponent(cc.Label).string = dollName\r\n        }\r\n        else {\r\n            node.getChildByName('Layout').getChildByName('playerName').getComponent(cc.Label).string = ''\r\n            node.getChildByName('Layout').getChildByName('dollName').getComponent(cc.Label).string = ''\r\n            node.getChildByName('Layout').getChildByName('txt').getComponent(cc.Label).string = pName\r\n        }\r\n\r\n        node.parent = this.node\r\n        node.active = true\r\n        node.runAction(cc.sequence(\r\n            cc.fadeIn(1),\r\n            cc.fadeOut(2),\r\n            cc.callFunc(() => {\r\n                node.destroy()\r\n            })\r\n        ))\r\n    }\r\n\r\n    onCloseSuccess() {\r\n        this.nodeSuccess.active = false\r\n    }\r\n\r\n    async onLoad() {\r\n        cc.log('zhuawawa onload')\r\n\r\n        this.nodeIntroduce.active = false\r\n        this.nodeSuccess.active = false\r\n        this.nodeDetail.active = false\r\n\r\n        this.scvCatchHistory.enabled = false\r\n        this.scvBoxHistory.enabled = false\r\n\r\n        const onMsgCall = async (textValue: any) => {\r\n            cc.log(JSON.parse(textValue.data))\r\n            const res = JSON.parse(textValue.data)\r\n            if (res[0] == 'info') {\r\n                this.baseUrl = res[1][0]\r\n                this.uid = res[1][1]\r\n                this.token = res[1][2]\r\n\r\n                const url = `${this.baseUrl}/api/public/?service=SpinningWawa.joinRoom&token=${this.token}&uid=${this.uid}`\r\n                const response: any = await this.fetch(url)\r\n\r\n                cc.log(response)\r\n\r\n                this.coin = parseInt(response.data.coin)\r\n                this.price = parseInt(response.data.price)\r\n                this.progress = parseInt(response.data.lucky_value)\r\n                this.boxProgress = parseInt(response.data.box_progress)\r\n\r\n                this.labelPrice.string = response.data.price + '币/次'\r\n\r\n                this.giftList = response.data.gift_list\r\n                this.isNewbee = response.data.is_newbee == 1\r\n\r\n                // 抓取记录\r\n                this.upCatchHistory()\r\n                this.upBoxHistory()\r\n                this.showBoxHistory()\r\n            }\r\n            if (res[0] == 'catch') {\r\n                const d = res[1]\r\n\r\n                if (d.success == 1) {\r\n                    const desc = `${d.nickname} 抓中了 ${d.goods_name}`\r\n                    cc.log(desc)\r\n                    this.showToast(d.nickname, d.goods_name)\r\n\r\n                    this.upBoxHistory()\r\n                    this.upCatchHistory()\r\n                }\r\n                /*\r\n                {\r\n                    \"type\": 101,\r\n                    \"user_id\": \"10002\",                //玩家id\r\n                    \"nickname\": \"哈哈\",               //玩家昵称\r\n                    \"success\": \"1\",                      //是否抓中了\r\n                    \"is_box\": \"0\",                        //是否为宝箱\r\n                    \"goods_name\": \"布朗熊\",        //物品名称\r\n                }\r\n                */\r\n            }\r\n            if (res[0] == 'progress') {\r\n                cc.log(this.boxProgress)\r\n                this.boxProgress = parseInt(res[1])\r\n            }\r\n            if (res[0] == 'refresh') {\r\n                cc.director.loadScene('Helloworld')\r\n            }\r\n        }\r\n\r\n        //*\r\n        //========监听webview传递过来的数据\r\n        if (window.document && window.document.addEventListener) {\r\n            window.document.addEventListener('message', onMsgCall)\r\n        }\r\n        if (window.parent && window.parent.addEventListenerXzww) {\r\n            window.parent.addEventListenerXzww('message', onMsgCall)\r\n        }\r\n\r\n        //========给webview发送事件\r\n        if (window.postMessage) {\r\n            window.postMessage(\"ready\");\r\n        }\r\n        if (window.parent && window.parent.postMessageXzww) {\r\n            window.parent.postMessageXzww(\"ready\");\r\n        }\r\n        //*/\r\n\r\n        /*\r\n        this.baseUrl = 'http://192.168.1.241:8080/'\r\n        this.uid = '229'\r\n        this.token = '2bcec4085f05a599397aed803c53efc7'\r\n \r\n        const url = `${this.baseUrl}/api/public/?service=SpinningWawa.joinRoom&token=${this.token}&uid=${this.uid}`\r\n        const response: any = await this.fetch(url)\r\n \r\n        cc.log(response)\r\n \r\n        this.coin = response.data.coin\r\n        this.progress = parseInt(response.data.lucky_value)\r\n        this.boxProgress = parseInt(response.data.box_progress)\r\n        this.giftList = response.data.gift_list\r\n        this.isNewbee = response.data.is_newbee == 1\r\n        */\r\n    }\r\n\r\n    async upCatchHistory() {\r\n        const url = `${this.baseUrl}/api/public/?service=SpinningWawa.gameHistory&token=${this.token}&uid=${this.uid}`\r\n        const response: any = await this.fetch(url)\r\n\r\n        cc.log(response)\r\n\r\n        this.scvCatchHistory.content.removeAllChildren()\r\n        for (let i = 0; i < response.data.length; i++) {\r\n            const info = response.data[i];\r\n            const node = cc.instantiate(this.prefabCatchItem)\r\n            const item: CatchItem = node.getComponent('CatchItem')\r\n            item.urlPhoto = info.avatar_thumb\r\n            item.urlDoll = info.img\r\n            item.desc = `${info.user_nicename} 抓到了 ${info.ret_name}`\r\n            item.time = info.passtime\r\n\r\n            node.parent = this.scvCatchHistory.content\r\n        }\r\n    }\r\n\r\n    async upBoxHistory() {\r\n        const url = `${this.baseUrl}/api/public/?service=SpinningWawa.boxHistory&token=${this.token}&uid=${this.uid}`\r\n        const response: any = await this.fetch(url)\r\n\r\n        cc.log(response)\r\n\r\n        this.scvBoxHistory.content.removeAllChildren()\r\n        for (let i = 0; i < response.data.length; i++) {\r\n            const info = response.data[i];\r\n            const node = cc.instantiate(this.prefabCatchItem)\r\n            const item: CatchItem = node.getComponent('CatchItem')\r\n            item.urlPhoto = info.avatar_thumb\r\n            item.urlDoll = info.img\r\n            item.desc = `${info.user_nicename} 抓到了 ${info.ret_name}`\r\n            item.time = info.passtime\r\n\r\n            node.parent = this.scvBoxHistory.content\r\n        }\r\n    }\r\n\r\n    showBoxHistory() {\r\n        this.scvBoxHistory.node.active = true\r\n        this.scvCatchHistory.node.active = false\r\n        this.scvBoxHistory.scrollToTop(0.1)\r\n    }\r\n\r\n    showCatchHistory() {\r\n        this.scvBoxHistory.node.active = false\r\n        this.scvCatchHistory.node.active = true\r\n        this.scvCatchHistory.scrollToTop(0.1)\r\n    }\r\n\r\n    updateDolls() {\r\n        this.dolls.forEach((v) => {\r\n            v.node.destroy()\r\n        })\r\n        this.dolls2.forEach((v) => {\r\n            v.node.destroy()\r\n        })\r\n\r\n        this.dolls = []\r\n        this.dolls2 = []\r\n\r\n        if (this.giftList.length <= 0) {\r\n            return\r\n        }\r\n\r\n        for (let i = 0; i < this.giftList.length; i++) {\r\n            const dollInfo = this.giftList[i];\r\n\r\n            // 如果是新手不是新手娃娃\r\n            if (this.isNewbee && dollInfo.is_newbee != 1) {\r\n                continue\r\n            }\r\n\r\n\r\n            if (this.boxProgress != 100 && dollInfo.is_box == 1) {\r\n                continue\r\n            }\r\n\r\n            let node = cc.instantiate(this.prefabDoll)\r\n            let doll: Doll = node.getComponent('Doll')\r\n            doll.init(dollInfo.id, dollInfo.icon)\r\n            node.parent = this.dollContainer1\r\n            node.x = this.dolls.length * node.width * 1.3 - this.node.width / 2 + node.width / 2\r\n            this.dolls.push(doll)\r\n\r\n            node.on('click', () => {\r\n                this.onDetail(dollInfo)\r\n            });\r\n\r\n            node = cc.instantiate(this.prefabDoll)\r\n            doll = node.getComponent('Doll')\r\n            doll.init(dollInfo.id, dollInfo.icon)\r\n            node.parent = this.dollContainer2\r\n            node.x = (this.dolls.length - 4) * node.width * 1.3 - this.node.width / 2 + node.width / 2\r\n            doll.sprite.node.color = cc.color(150, 150, 150)\r\n            this.dolls2.push(doll)\r\n\r\n            node.on('click', () => {\r\n                this.onDetail(dollInfo)\r\n            });\r\n        }\r\n\r\n        this.lastDollNode = this.dolls[this.dolls.length - 1].node\r\n        this.lastDollNode2 = this.dolls2[this.dolls.length - 1].node\r\n    }\r\n\r\n    update() {\r\n        this.curDoll = null\r\n        for (let i = 0; i < this.dolls.length; i++) {\r\n            const doll = this.dolls[i];\r\n            const node = doll.node\r\n            node.x -= this.scrollSpeed\r\n\r\n            if (this.curDoll === null) {\r\n                if (node.x > -90 && node.x < 90) {\r\n                    this.curDoll = doll\r\n                }\r\n                if (this.isNewbee && node.x > -120 * 1.3 - 5 && node.x < 120 * 1.3 + 5) {\r\n                    this.curDoll = doll\r\n                }\r\n            }\r\n\r\n            if (node.x < -this.dollContainer1.width / 2 - node.width / 2 - 10) {\r\n                node.active = true\r\n                node.x = this.lastDollNode.x + node.width * 1.3\r\n                this.lastDollNode = node\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < this.dolls2.length; i++) {\r\n            const doll = this.dolls2[i];\r\n            const node = doll.node\r\n            node.x -= this.scrollSpeed\r\n\r\n            if (node.x < -this.dollContainer2.width / 2 - node.width / 2 - 10) {\r\n                node.active = true\r\n                node.x = this.lastDollNode2.x + node.width * 1.3\r\n                this.lastDollNode2 = node\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    asyncAction(node: cc.Node, action: cc.FiniteTimeAction) {\r\n        return new Promise((resolve, reject) => {\r\n            node.runAction(cc.sequence(action, cc.callFunc(resolve)))\r\n        })\r\n    }\r\n\r\n    onIntroduce() {\r\n        this.nodeIntroduce.active = true\r\n    }\r\n\r\n    onCloseIntroduce() {\r\n        this.nodeIntroduce.active = false\r\n    }\r\n\r\n    onRecharge() {\r\n        if (window.postMessage) {\r\n            window.postMessage(\"recharge\");\r\n        }\r\n        if (window.parent && window.parent.postMessageXzww) {\r\n            window.parent.postMessageXzww(\"recharge\");\r\n        }\r\n    }\r\n\r\n    onCloseDetail() {\r\n        this.nodeDetail.active = false\r\n    }\r\n\r\n    onDetail(info) {\r\n        this.nodeDetail.active = true\r\n        cc.loader.load(info.img, (err, texture) => {\r\n            var frame = new cc.SpriteFrame(texture);\r\n            this.spDetail.spriteFrame = frame;\r\n        });\r\n        this.labelDetail.string = info.description\r\n    }\r\n\r\n\r\n    async onCatch(e: cc.Event.EventTouch) {\r\n        if (this.coin < this.price) {\r\n            this.showToast('金币不足，请充值后再试！')\r\n            return\r\n        }\r\n\r\n        const nodeTarget: cc.Node = e.target\r\n        const btn = nodeTarget.getComponent(cc.Button)\r\n        btn.interactable = false\r\n\r\n        const offsetY = this.nodePaw.y - this.dollContainer1.y\r\n\r\n        await this.asyncAction(this.nodePaw, cc.moveBy(0.25, cc.p(0, -offsetY * 0.3)))\r\n        this.nodePaw.getComponent(cc.Sprite).spriteFrame = this.framePaw1\r\n        await this.asyncAction(this.nodePaw, cc.moveBy(0.75, cc.p(0, -offsetY * 0.7)))\r\n        this.nodePaw.getComponent(cc.Sprite).spriteFrame = this.framePaw2\r\n\r\n        if (this.curDoll) {\r\n            cc.log('抓起来了', this.curDoll.id)\r\n\r\n            const dollClone = cc.instantiate(this.curDoll.node)\r\n            dollClone.x = 0\r\n            dollClone.y = 0\r\n            dollClone.parent = this.nodePaw\r\n\r\n            this.curDoll.node.active = false\r\n\r\n            const url = `${this.baseUrl}/api/public/?service=SpinningWawa.checkResult&goods_id=${this.curDoll.id}&token=${this.token}&uid=${this.uid}`\r\n            const response: any = await this.fetch(url)\r\n            cc.log(response);\r\n\r\n            if (response.code == 1) {\r\n                this.coin = response.data.coin\r\n                this.progress = parseInt(response.data.lucky_value)\r\n                this.isNewbee = response.data.is_newbee == 1\r\n                this.boxProgress = parseInt(response.data.box_progress)\r\n\r\n                if (response.data.success == 1) {\r\n                    await this.asyncAction(this.nodePaw, cc.moveBy(1, cc.p(0, offsetY)))\r\n                    dollClone.destroy()\r\n                    cc.log('抓中了')\r\n                    btn.interactable = true\r\n\r\n                    this.nodeSuccess.active = true\r\n                    cc.loader.load({ url: response.data.icon }, (err, texture) => {\r\n                        var frame = new cc.SpriteFrame(texture);\r\n                        this.spCatchDoll.spriteFrame = frame;\r\n                    });\r\n                }\r\n                else {\r\n                    dollClone.runAction(cc.sequence(\r\n                        cc.delayTime(0.75),\r\n                        cc.moveBy(0.75, cc.p(0, -offsetY * 1.3)),\r\n                        cc.callFunc(() => {\r\n                            dollClone.destroy()\r\n                            cc.error('掉了')\r\n                            btn.interactable = true\r\n                        })\r\n                    ))\r\n                    await this.asyncAction(this.nodePaw, cc.moveBy(1, cc.p(0, offsetY)))\r\n                }\r\n            }\r\n            else {\r\n                this.showToast(response.msg)\r\n            }\r\n        }\r\n        else {\r\n            cc.error('没有抓到')\r\n\r\n            const url = `${this.baseUrl}/api/public/?service=SpinningWawa.checkResult&goods_id=0&token=${this.token}&uid=${this.uid}`\r\n            const response: any = await this.fetch(url)\r\n            cc.log(response);\r\n            if (response.code == 1) {\r\n                this.coin = response.data.coin\r\n                this.progress = parseInt(response.data.lucky_value)\r\n                this.boxProgress = parseInt(response.data.box_progress)\r\n                this.isNewbee = response.data.is_newbee == 1\r\n            }\r\n            else {\r\n                this.showToast(response.msg)\r\n            }\r\n\r\n            await this.asyncAction(this.nodePaw, cc.moveBy(1, cc.p(0, offsetY)))\r\n            btn.interactable = true\r\n        }\r\n\r\n        this.nodePaw.getComponent(cc.Sprite).spriteFrame = this.framePaw3\r\n    }\r\n}\r\n","\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n    @property(cc.Node)\r\n    mask: cc.Node = null\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null\r\n\r\n    @property(cc.Float)\r\n    _progress: number = 1.0\r\n    @property\r\n    get progress() {\r\n        return this._progress\r\n    }\r\n    set progress(v) {\r\n        this._progress = v\r\n\r\n        this.mask.width = this.node.width\r\n        this.mask.height = this.node.height * v\r\n\r\n        const n = Math.floor(v * 100)\r\n        this.label.string = `${n}%`\r\n    }\r\n\r\n    onLoad() {\r\n        this.mask.y = -this.node.height / 2\r\n    }\r\n}\r\n"],"sourceRoot":"/source/","file":"project.dev.js"}